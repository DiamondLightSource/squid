# Default values for blueapi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/diamondlightsource/squid-xraylib
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

# Recommended for production to change service.type to ClusterIP and set up an Ingress
service:
  type: ClusterIP
  port: 80
  targetPort: 3000
  # loadBalancerIP: 172.

ingress:
  create: true
  host: xraylib.diamond.ac.uk
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  pathType: Prefix
  tls:
    - hosts:
        - xraylib.diamond.ac.uk

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

initResources: {}
# Can optionally specify separate resource constraints for the scratch setup container.
# If left empty this defaults to the same as resources above.

nodeSelector: {}

tolerations: []

affinity: {}

hostNetwork: false # May be needed for talking to arcane protocols such as EPICS

restartOnConfigChange: true

listener:
  enabled: true
  resources: {}

# Additional envVars to mount to the pod as a String
extraEnvVars: |
  - name: OTLP_EXPORT_ENABLED
    value: {{ .Values.tracing.otlp.export_enabled }}
  - name: OTEL_EXPORTER_OTLP_TRACES_PROTOCOL
    value: {{ .Values.tracing.otlp.protocol }}
  - name: OTEL_EXPORTER_OTLP_ENDPOINT
    value: "{{ .Values.tracing.otlp.host }}:{{ .Values.tracing.otlp.port }}"

tracing:
  otlp:
    export_enabled: false
    protocol: http/protobuf
    host: https://daq-services-jaeger # replace with central instance
    port: 4318
